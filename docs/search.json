[{"path":"index.html","id":"preface","chapter":" 1 Preface","heading":" 1 Preface","text":"","code":""},{"path":"index.html","id":"why-make-a-manual-on-this-data","chapter":" 1 Preface","heading":"1.1 Why make a manual on this data?","text":"Like many large Australian microdata sets, e.g. HILDA, broad scope \ndata items included ABS DataLab’s suite products. way data organised DataLab complex, datasets large terms observations. , can useful guide get started.manual intended build already compiled elsewhere terms metadata \nbest practices, well provide handy utilities R common operations used data, e.g. \nmerging data files.","code":""},{"path":"index.html","id":"general-tips-for-using-datalab","chapter":" 1 Preface","heading":"1.2 General Tips for using DataLab","text":"","code":""},{"path":"index.html","id":"efficiency-is-key","chapter":" 1 Preface","heading":"1.2.1 Efficiency is Key","text":"microdata, usually large number observations, however especially true datasets BLADE, nearly entire population Australian firms observed. can helpful speed code avoiding loops /running operations parallel rather series. Packages data.table R already provide parallel functionality, thus worth familiarising already. familiar R packages tidyverse dplyr, many suitable analogues data.table.","code":""},{"path":"index.html","id":"packages","chapter":" 1 Preface","heading":"1.2.2 Packages","text":"R user, DataLab uses R package manager downloading packages securely. packages CRAN available package manager, however, uncommon/non-CRAN packages included. possible, try avoid using obscure R packages.","code":""},{"path":"index.html","id":"third-party-datalab-resources","chapter":" 1 Preface","heading":"1.3 Third-Party DataLab Resources","text":"","code":""},{"path":"index.html","id":"blade","chapter":" 1 Preface","heading":"1.3.1 BLADE","text":"Productivity Commission’s discussion data item coverage BLADE uses productivity research.https://www.pc.gov.au/research/supporting/blade","code":""},{"path":"BLADE.html","id":"BLADE","chapter":" 2 BLADE","heading":" 2 BLADE","text":"","code":""},{"path":"BLADE.html","id":"general-structure-of-blade","chapter":" 2 BLADE","heading":"2.1 General Structure of BLADE","text":"BLADE stored Product network drive virtual machine DataLab. separate folders different file types, recommend working csv files R Python user. separate csv file financial year source, e.g. one file represent BAS returns FY18-19. Alongside general data cleaning, need merge across different sources, well appending data year, interested panel data.‘core’ BLADE consists four different data sources containing administrative data businesses complete financial year:Indicative Data Items: contains ‘spine’ ABNs datasets can linked.BAS: filled firms remit GST include information sales, operating expenses, purchases capital expendituresBIT: files contain income tax data (including balance sheet data) submitted ATO.PAYG: contains information employee headcount wages expense payment summaries submitted ATO.datasets within extended version BLADE cover R & D expenses customs data, however tend cover smaller proportion firms within population.","code":""},{"path":"BLADE.html","id":"tau-or-abn-levels","chapter":" 2 BLADE","heading":"2.1.1 TAU or ABN levels","text":"two levels observation inside BLADE, ABN level, encompasses legal entity TAU level, attempts identify ‘economic firm’. TAU may consist multiple ABNs, example, legal entities Kmart Australia operates aggregated one TAU. TAUs can aggregated enterprise id, case Kmart, identify parent company Wesfarmers Ltd. ","code":""},{"path":"BLADE.html","id":"blade-utils-in-r","chapter":" 2 BLADE","heading":"2.2 BLADE Utils in R","text":"","code":""},{"path":"BLADE.html","id":"append-multiple-time-periods-together","chapter":" 2 BLADE","heading":"2.2.1 Append multiple time periods together","text":"","code":"\nlibrary(matrixStats)\nlibrary(data.table)\n\nblade_path <- \" \" # Directory containing BLADE source files in CSV format\n\ndestination_path <-\"  \" # Directory where merged files will go\n\nfile_patterns <- c(\"frame\", \"BAS\", \"BIT\", \"PAYG\") # File path patterns\n\ndest_patterns <- c(\"ind_items.csv\", \"BAS.csv\", \"BIT.csv\", \"PAYG.csv\") # Destination files\n\nfor (i in 1:4) {\n\n    files <- list.files(path, pattern=file_patterns[i], full.names=TRUE)\n    files <- lapply(files, fread)\n    for (j in 1:length(files)) {\n        files[[j]] <- files[[j]][,source:=match(j,files)+10]\n    }\n    files <- rbindlist(files)\n    fwrite(files,file = paste(destination_path, dest_patterns[i], sep=\"/\"))\n\n}"},{"path":"BLADE.html","id":"merging-blade-core-datasets","chapter":" 2 BLADE","heading":"2.2.2 Merging BLADE core datasets","text":"","code":"\n# This is assuming you have completed the appending step\n\n# Read in the files you saved down\n\nobjects <- c(\"ind_items\", \"BAS\", \"BIT\", \"PAYG\")\n\nfor (i in 1:4){\n  \n    assign(objects[i],fread(paste(destination_path, dest_patterns[i], sep=\"/\")))\n}\n\n# Merge datatable objects\n\nfor (i in list(BAS,BIT,PAYG)){\n    \n    ind_items <- i[ind_items, on = .(id,tsid)]\n}"},{"path":"madip.html","id":"madip","chapter":" 3 MADIP","heading":" 3 MADIP","text":"Watch space info","code":""}]
